// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	contact "github.com/RagOfJoes/mylo/user/contact"

	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, contacts
func (_m *Service) Add(ctx context.Context, contacts ...contact.Contact) ([]contact.Contact, error) {
	ret := _m.Called(ctx, contacts)

	var r0 []contact.Contact
	if rf, ok := ret.Get(0).(func(context.Context, ...contact.Contact) []contact.Contact); ok {
		r0 = rf(ctx, contacts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]contact.Contact)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, ...contact.Contact) error); ok {
		r1 = rf(ctx, contacts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Find provides a mock function with given fields: ctx, value
func (_m *Service) Find(ctx context.Context, value string) (*contact.Contact, error) {
	ret := _m.Called(ctx, value)

	var r0 *contact.Contact
	if rf, ok := ret.Get(0).(func(context.Context, string) *contact.Contact); ok {
		r0 = rf(ctx, value)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*contact.Contact)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, value)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
